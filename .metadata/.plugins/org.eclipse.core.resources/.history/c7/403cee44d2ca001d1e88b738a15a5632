package pe.edu.ucsur.java.ms.sc.ventas.msventasgestionemergencia.service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import org.springframework.stereotype.Service;
import com.fasterxml.jackson.databind.json.JsonMapper;

import pe.edu.ucsur.java.ms.sc.alerta.msgestionemergencia.dto.PacienteDTO;
import pe.edu.ucsur.java.ms.sc.alerta.msgestionemergencia.entity.PacienteEntity;
import pe.edu.ucsur.java.ms.sc.alerta.msgestionemergencia.repository.PacienteRepository;
import pe.edu.ucsur.java.ms.sc.alerta.msgestionemergencia.service.exception.ServiceException;

@Service
public class PacienteServiceImpl implements PacienteService{
 
	private PacienteRepository PacienteRepository;
	private JsonMapper jsonMapper;
	
	public PacienteServiceImpl(	PacienteRepository PacienteRepository,
								JsonMapper jsonMapper
									) {
		super();
		this.PacienteRepository = PacienteRepository;
		this.jsonMapper=jsonMapper;
	}

	@Override
	public List<PacienteDTO> findByLike(PacienteDTO t) throws ServiceException {
		try {
			List<PacienteEntity> lstPacienteEntity= PacienteRepository.findAll();
			return lstPacienteEntity.stream().map(e -> this.getPacienteDTO(e))
					.collect(Collectors.toList());
		} catch (Exception e) {
			throw new ServiceException(e);
		}
		
	}

	@Override
	public Optional<PacienteDTO> findById(Long id) throws ServiceException {
		Optional<PacienteEntity> optPacienteEntity=  PacienteRepository.findById(id);
		if(optPacienteEntity.isPresent()) {
			return Optional.of(this.getPacienteDTO(optPacienteEntity.get()));
		}
		return null;
	}

	// Mappers
	private PacienteDTO getPacienteDTO(PacienteEntity e) {
		return jsonMapper.convertValue(e, PacienteDTO.class);
	}
	
	private PacienteEntity getPacienteEntity(PacienteDTO d) {
		return jsonMapper.convertValue(d, PacienteEntity.class);
	}

	@Override
	public PacienteDTO save(PacienteDTO t) throws ServiceException {
		return this.getPacienteDTO(this.PacienteRepository.save(this.getPacienteEntity(t)));
	}
	
}
